{"version":3,"sources":["supportingUI/guestRoom.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["GuestRoom","useState","data","id","completeNDB","todos","setTodos","toDo","setToDo","deleteTodo","index","listTodo","splice","taskComplete","completedNDB","dataIn","complete","showInfo","setInfo","useEffect","saveData","JSON","parse","localStorage","getItem","setItem","stringify","className","onClick","size","color","removeItem","map","todo","onSubmit","e","length","preventDefault","type","placeholder","value","onChange","target","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.f73bf6d0.chunk.js","sourcesContent":["import React,{useState,useEffect} from  'react';\nimport './guestRoomUI.css';\n\nimport {FaClipboardCheck} from 'react-icons/fa'\nimport {RiSendPlaneFill,RiFileInfoLine,RiCloseCircleLine} from 'react-icons/ri'\nimport {MdDeleteForever} from 'react-icons/md'\nimport {GoChecklist} from 'react-icons/go'\nimport {GiHand} from 'react-icons/gi'\nimport {AiOutlineClear} from 'react-icons/ai'\n\nexport default function GuestRoom(){\n\n    const [todos,setTodos] = useState([{data:\"I will complete all the Todo's of the day\",id:0,completeNDB:false}])\n    const [toDo,setToDo] = useState(\"\")\n    const addInTodo = (e) =>{\n        setTodos([...todos,{data:toDo,id:todos.length,complete:false}])\n        setToDo('')\n        e.preventDefault()\n    }\n    const deleteTodo = index =>{\n        const listTodo = [...todos];\n        listTodo.splice(index,1);\n        setTodos(listTodo)\n    }\n    const taskComplete = (index,completedNDB,dataIn) => {\n        const listTodo = [...todos];\n        if(completedNDB){\n            listTodo.splice(index,1,{data:dataIn,complete:false});\n        }\n        else{\n            listTodo.splice(index,1,{data:dataIn,complete:true});\n        }\n        setTodos(listTodo)\n\n    }\n    const [showInfo,setInfo] = useState(false)\n\n    const ClearAllData = () => {\n        setTodos([{data:\"I will complete all the Todo's of the day\",id:0,completeNDB:false}])\n        localStorage.removeItem('UserTodos')\n    }\n    \n    useEffect(()=>{\n        const saveData = JSON.parse(localStorage.getItem('UserTodos'))\n        if(saveData){\n            setTodos(saveData)\n        }\n    },[])\n\n    useEffect(()=>{\n        localStorage.setItem('UserTodos',JSON.stringify(todos))\n    },[todos])\n    \n    return(\n        <div className=\"guestRoom\">\n            <header>\n                <div className=\"Headder\">\n                    <h1 className=\"headTitle\">Today's Todo<GiHand/></h1>\n                    <button className=\"infoIcon\" onClick={()=>{setInfo(!showInfo)}}>\n                        <RiFileInfoLine size={30} color=\"yellow\"/>\n                    </button>\n                    <button className=\"clearIcon\" onClick={ClearAllData}>\n                        <AiOutlineClear size={30} color=\"rgb(255, 114, 114)\"/>\n                    </button>\n                </div>\n            </header>\n            <main>\n                <div className=\"ToDo\">\n                    { showInfo? \n                        <div className=\"warningData\">\n                            <p className=\"warningText\">\n                                <b>Info:</b>Hello Alien, By making todo's for the day you will complete all your task\n                                without forgetting anything... and <AiOutlineClear/> is used for clear all the data from your localStorage\n                                <br/> <b>About Developer:</b>Myself Sukarna Jana ,If you find any bug it will \n                                be really greatfull, if you approach me then i will be fixing it as soon as posible.\n                                <br/> <b>License under:</b>\n                                <p>\n                                    MIT License<br/>\n                                    <br/>\n                                    Copyright (c) 2021 Sukarna Jana<br/>\n                                    <br/>\n                                    Permission is hereby granted, free of charge, to any person obtaining a copy\n                                    of this software and associated documentation files (the \"Software\"), to deal\n                                    in the Software without restriction, including without limitation the rights\n                                    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n                                    copies of the Software, and to permit persons to whom the Software is\n                                    furnished to do so, subject to the following conditions:<br/>\n                                    <br/>\n                                    The above copyright notice and this permission notice shall be included in all\n                                    copies or substantial portions of the Software.<br/>\n                                    <br/>\n                                    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n                                    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n                                    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n                                    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n                                    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n                                    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n                                    SOFTWARE.\n                                </p>\n                            </p>\n                            <button className=\"infoIcon\" onClick={()=>setInfo(!showInfo)}><RiCloseCircleLine size={20}/></button>\n                        </div> : null\n                    }\n                    <h2><FaClipboardCheck/> I have Todo:</h2>\n                    <ul>\n                        {todos && todos.map((todo,index)=>(\n                            <li key={todo.id}>\n                                { todo.complete ? \n                                    <div className=\"TodoListPartComplete\">\n                                        <p>{todo.data}</p>\n                                        <p className=\"deleteAlign\">\n                                            <button className=\"deleteAlignbtn\" onClick={()=>deleteTodo(index)}>\n                                                <MdDeleteForever size={20}/>\n                                            </button>\n                                        </p>\n                                        <p>\n                                            <button className=\"TaskCompletebtn\" onClick={()=>taskComplete(index,todo.complete,todo.data)}>\n                                                <GoChecklist size={20}/>\n                                            </button>\n                                        </p>\n                                    </div> :\n                                    <div className=\"TodoListPartNotComplete\">\n                                        <p>{todo.data}</p>\n                                        <p className=\"deleteAlign\">\n                                            <button className=\"deleteAlignbtn\" onClick={()=>deleteTodo(index)}>\n                                                <MdDeleteForever size={20}/>\n                                            </button>\n                                        </p>\n                                        <p>\n                                            <button className=\"TaskCompletebtn\" onClick={()=>taskComplete(index,todo.complete,todo.data)}>\n                                                <GoChecklist size={20}/>\n                                            </button>\n                                        </p>\n                                    </div> \n                                }\n                        </li>))}\n                    </ul>\n                </div>\n            </main>\n            <footer>\n                <div>\n                    <div>\n                        <form className=\"inputGrid\" onSubmit={addInTodo}>\n                            <input \n                                type=\"text\" \n                                className=\"insertData\" \n                                placeholder=\"I have todo ...\" \n                                value={toDo} \n                                onChange={(e)=>{setToDo(e.target.value)}}/>  \n                            <button type=\"submit\" className=\"addTodo\"><RiSendPlaneFill size={25} color=\"white\"/></button>\n                        </form>\n                    </div> \n                </div>\n            </footer>\n        </div>\n    )\n}\n","import React from 'react';\nimport './App.css';\n\nimport GuestRoom from './supportingUI/guestRoom';\n\nfunction App(){\n    return(\n        <GuestRoom/>\n    )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(<App/>,document.getElementById('root'));\n\nserviceWorkerRegistration.register();"],"sourceRoot":""}